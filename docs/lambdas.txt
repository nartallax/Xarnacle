О замыканиях aka анонимных функциях

Анонимная функция есть значение; экземпляр определенного класса. Вызов функции совершается путем вызова определенного метода этого класса.
Анонимные функции, которые можно видеть в коде, не всегда транслируются одинаково в C-код. Также они имеют некоторое влияние на то, как будут объявлены переменные, попавшие в замыкание.

Идеологически, при создании замыкания в него попадают переменные, на которые ссылается код замыкания (т.е. явно указать переменные, попавшие в замыкание, нельзя). Иммутабельные переменные попадают в замыкание путем копирования их значения в структуру замыкания. Мутабельные переменные попадают в замыкание несколько сложнее: объявление мутабельной переменной неявно для программиста конвертируется в иммутабельную ссылку на heap, со счетчиком, значение которого увеличивается на 1 для каждой лямбды, которая на него ссылается + еще один для функции, в которой эта переменная объявлена; каждое обращение к этой переменной теперь является обращением по ссылке; в структуру замыкания сохраняется эта ссылка. Это сделано для того, чтобы можно было безопасно ссылаться на переменные, изначально расположенные на стеке.

Если анонимная функция не "утекает", т.е. спан её существования меньше или равен спану существования функции, в которой она объявлена, то вышеописанной конвертации мутабельных переменных не происходит; вместо этого в лямбду сохраняется ссылка на мутабельную переменную на стеке (точнее, эта лямбда будет нормально работать без конвертации; возможно, в той же функции будет объявлена другая лямбда, которая утечет; и тогда переменную все-таки нужно будет конвертировать, и использовать её соответственно везде).

Если анонимная функция не "утекает", а также имеет тривиальный паттерн использования (TODO: определить точнее), то объект замыкания не будет создан; вместо этого код замыкания будет включен в код функции, в которой оно объявлено. В некоторых случаях для подобного включения необходимо также будет включить код других функций, в которые передается замыкание.

Если анонимная функция не сохраняет в себя никаких параметров замыкания, то инстанса не создается; вместо этого используется "сырая" ссылка на функцию.