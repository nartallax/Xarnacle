Об архитектуре компилятора и билд-системы.

Основным понятием билд-системы является Проект.
Проект состоит из набора настроек билд-системы и множества файлов, с которыми билд-система работает как с данными (в это множество входят файлы с исходным кодом, ресурсы и т.д.).

Компилятор (а точнее, билд-система) хранит логику своей работы в Действиях.

Действие подобно функции. У него есть некоторая внутренняя логика, уникальное имя, а также Параметры. Параметры передаются через файлы конфигурации/командную строку.

Действия делятся на Изолированные и Всеобщие. 
Изолированные действия выполняются отдельно для каждого обрабатываемого файла (это позволяет выполнять их параллельно). Входные и выходные файлы для каждого Действия связаны с файлом, который подан на обработку этому Действию.
Всеобщие действия могут оперировать сразу со всеми файлами.

Действия можно композировать путем вызова их из других Действий. 
Действия, которые не вызывают никакие другие действия, называются атомарными; остальные действия называются композитными. Следует проектировать атомарные Действия таким образом, чтобы их было удобно композировать. Следует проектировать композитные действия таким образом, чтобы они не несли иной логики, кроме логики композиции.

Действия делятся на внутренние и внешние. Только внешние действия могут быть запущены пользователем.
Над одним Проектом одновременно может выполняться не более одного Действия, запущенного пользователем. Действия, составляющие части запущенного пользователем, в некоторых случаях могут выполняться одновременно.

Действия делятся на встроенные и пользовательские. Встроенные действия едины для всей билд-системы и поставляются вместе с ней. Пользовательские действия задаются отдельно для каждого Проекта и используются только в нем.